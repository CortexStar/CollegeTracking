Why the footer disappears

position: fixed on html/body freezes the document at the top‑left corner of the viewport.
Everything that would normally flow past the bottom edge—including your Footer—is still being rendered, but it sits outside the fixed 100 vh canvas and therefore can’t be seen. Adding overflow‑hidden to the outer flex wrapper then clips whatever little bit of the footer would have peeked in.

Minimal fix
1  Remove the position: fixed rule
css
Copy
Edit
/* src/index.css */
html.landing-page,
html.landing-page body {
  /* keep the scrollbar off, but let the page stay in normal flow */
  overflow: hidden;
  height: 100%;
  width: 100%;
  /*  position: fixed;   ⟵  delete this line */
}
2  Let the wrapper grow to include the footer
tsx
Copy
Edit
// src/components/layout.tsx
export default function Layout({ children }: { children: React.ReactNode }) {
  const [location] = useLocation();
  const isLandingPage = location === "/";

  useEffect(() => {
    const html = document.documentElement;
    html.classList.toggle("landing-page", isLandingPage);
    return () => html.classList.remove("landing-page");
  }, [isLandingPage]);

  return (
    /* ✱ no overflow-hidden here ✱ */
    <div className="flex min-h-screen flex-col bg-gray-50 dark:bg-gray-900">
      <Header />
      {/* for the hero section we still suppress internal scroll */}
      <main className={isLandingPage ? "flex-1 overflow-hidden" : "flex-1"}>
        {children}
      </main>
      <Footer />
    </div>
  );
}
3  Make the landing‑page hero fill the remaining height
Because the wrapper is a flex‑col that already accounts for Header and Footer, you can let the hero simply grow inside main:

tsx
Copy
Edit
// src/pages/landing.tsx  (relevant part)
return (
  <div className="flex h-full flex-col">
    <div className="flex flex-1 items-center justify-center overflow-hidden">
      <ContextMenu>{/* … */}</ContextMenu>
    </div>
  </div>
);
Result
Scrollbars are gone on the landing route (/), but the page still sits in normal flow.

The Footer stays visible at the bottom of the viewport with no need for scrolling.

All other routes behave exactly as before.

If you prefer to keep an explicit height instead of relying on flex, replace h-full with something like

html
Copy
Edit
class="h-[calc(100dvh-theme(spacing.20)-theme(spacing.16))]"
where the two theme() calls subtract your header and footer heights (Tailwind ≥ 3.4 supports theme() inside arbitrary values).

That’s all you need—no changes outside layout.tsx and the tiny CSS tweak.